<% # var params et action, search_tabs et profiles %>
<% form_tag('/admin/log_view_generic/' + action + "?tab="+params[:tab]) do %>
<form action="#" method="post">
	<br/>
    <div class="collection_helper_label">
        <% is_light = false
        if defined? light and light == true
        is_light = true
        end %>
        <% if defined? search_tabs and !search_tabs.nil? %>
        <label>
            Onglets :
        </label>
        <select name="tab_filter">
            <option value="">Tous</option>
            <% search_tabs.each do |tab| %>
            <option value="<%=tab.label%>"<% if tab.label == params[:tab_filter] %> selected<%end %>><%=tab.label %>
            </option>
            <% end %>
        </select>
        <% end %>
        <% if defined? profiles and !profiles.nil? %>
        <label>
            Profil :
        </label>
        <select name="profil">
            <option value="">Tous</option>
            <% if !profiles.nil? %>
            	<% profiles.each do |profile| %>
            		<option value="<%=profile.id_role%>"<% if  profile.id_role == params[:profil] %> selected<%end %>><%=profile.id_role %>
            		</option>
            	<% end %>
            <% end %>
        </select>
        <% end %>
        <% if defined? types and !types.nil? %>
        <label>
            Type :
        </label>
        <select name="material_type">
            <option value="">Tous</option>
            <% types.each do |tab| %>
            <option value="<%=tab.material_type%>"<% if tab.material_type == params[:material_type] %> selected<%end %>><%=tab.material_type %>
            </option>
            <% end %>
        </select>
        <% end %>
        <% if defined? plages_ip and !plages_ip.nil? %>
        <label>
            Plage IP :
        </label>
        <select name="plage_ip">
            <option value="">Tous</option>
            <% plages_ip.each do |plage| %>
            	<option <% if (plage[0] == params[:profil_poste])%> selected<%end %> value="<%= plage[0]%>"><%=plage[1]["Label"]%></option>
            <% end %>
        </select>
        <% end %>
        <% if defined? types or defined? profiles or defined? search_tabs or defined? plages_ip %>
        <br/>
        <% end %>
        <% if !is_light %>
        <label for="from">
            A partir de 
        </label>
        <input type="text" id="date_from" name="date_from" value="<%= params[:date_from] %>"/>
        <label for="to">
            au
        </label>
        <input type="text" id="date_to" name="date_to" value="<%= params[:date_to] %>" />
        <br/>
        <label>
            Par: 
        </label>
        <select name="unit">
            <% ["", "day", "month", "year"].each do |d| %>
            <option value="<%=d%>"<% if d == params[:unit] %> selected<%end %>> <%=translate("label_#{d}") %>
            </option>
            <% end %>
        </select>
        <br/>
        <label>
            Tri: 
        </label>
        <input type="radio" name="order" value="time"<% if "time" == params[:order] %> checked<%end %>>Date<input type="radio" name="order" value="total"<% if "total" == params[:order] %> checked<%end %>>Total
        <br/>
        <% end %>
        <label>
            Affichage:
        </label>
        <select name="max">
            <% [5, 10, 25, 50, 100].each do |d| %>
            <option value="<%=d%>"<% if d == params[:max] %> selected<%end %>> <%=d %></option>
            <%end %>
        </select>
        <input type="hidden" name="mode" value="<%=params[:mode]%>"/>
		<input type="submit" name="show" value="Afficher"/>
		<input type="submit" name="export" value="Exporter"/>
    </div>
	<% end %>
    <script>
        $j(function(){
            var dates = $j("#date_from, #date_to").datepicker({
                changeMonth: true,
                changeYear: true,
                regional: ["fr"],
                onSelect: function(selectedDate){
                    var option = this.id == "date_from" ? "minDate" : "maxDate", instance = $j(this).data("datepicker"), date = $j.datepicker.parseDate(instance.settings.dateFormat ||
                    $j.datepicker._defaults.dateFormat, selectedDate, instance.settings);
                    dates.not(this).datepicker("option", option, date);
                }
            });
        });
    </script>
